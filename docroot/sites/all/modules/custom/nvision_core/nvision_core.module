<?php

/**
 * @file
 */

/**
 * Implements hook_block_info().
 */
function nvision_core_block_info() {
  return array(
    'hero_carousel' => array(
      'info'  => t('Hero image carousel'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'social_icons' => array(
      'info'  => t('Social Media'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function nvision_core_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'hero_carousel':
      $block['subject'] = t('Hero image carousel');
      $block['content'] = array(
        '#theme' => 'hero_carousel_block',
      );
      break;
    case 'social_icons':
      $block['subject'] = t('Social Media');
      $block['content'] = array(
        '#theme' => 'social_icons_block',
      );
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function nvision_core_theme($existing, $type, $theme, $path) {
  return array(
    'hero_carousel_block' => array(
      'variables' => array(),
      'template'  => 'templates/hero-carousel-block',
    ),
    'social_icons_block' => array(
      'variables' => array(),
    ),
  );
}

/**
 * Returns links for Social Media icons.
 *
 * @param $variables
 *
 * @return string
 */
function theme_social_icons_block($variables) {
  $output = '';
  $links = array();
  $social_links = _nvision_core_social_links();

  foreach ($social_links as $link => $url) {
    $link = array(
      'text' => '<span class="sr-only">' . drupal_ucfirst($link) . '</span>',
      'path' => $url,
      'options' => array(
        'html' => TRUE,
        'attributes' => array(
          'rel' => 'nofollow',
          'class' => array(
            'fa',
            'fa-' . $link,
          ),
        ),

      ),
    );
    $output .= theme('link', $link);
  }

  return $output;
}

/**
 * Implements hook_google_recaptcha_always_protect_alter().
 */
function nvision_core_google_recaptcha_always_protect_alter(&$always_protected) {
  $always_protected[] = 'webform_client_form_16';
}

/**
 * Implements hook_google_recaptcha_available_forms_alter().
 */
function nvision_core_google_recaptcha_available_forms_alter(&$available_forms) {
  $always_protected[] = 'webform_client_form_16';
}

/**
 * Template preprocess handler for 'hero_carousel_block' theme.
 */
function template_process_hero_carousel_block(&$variables) {
  $view = views_get_view_result('homepage_slideshow', 'carousel');
  // Add an 'active' class to the first result
  $view[0]->status = 'active';

  $hero_images = array();

  foreach ($view as $item) {
    $item_vars = array();
    $img = $item->field_field_image[0]['raw'];

    $item_vars['uri'] = $img['uri'];
    $item_vars['alt'] = $img['alt'];
    $item_vars['title'] = $img['title'];

    // Theme the HTML and add rendered HTML to object using variables above.
    $item->html = render($item->field_field_image[0]['rendered']);

    $hero_images[] = $item;
  }

  $variables['hero_images'] = $hero_images;
}

/**
 * Helper function to get the current user's cart quantity.
 *
 * @return int|null
 */
function _nvision_core_get_cart_quantity() {
  global $user;

  // First check to ensure there are products in the shopping cart.
  if ($order = commerce_cart_order_load($user->uid)) {
    $wrapper = entity_metadata_wrapper('commerce_order', $order);

    $quantity = 0;

    foreach ($wrapper->commerce_line_items as $line_item) {
      if (!$line_item instanceof EntityMetadataWrapper) {
        $line_item = entity_metadata_wrapper('commerce_line_item', $line_item);
      }
      $types = commerce_popup_cart_selected_line_items();

      if (in_array($line_item->type->value(), $types)) {
        $quantity += $line_item->quantity->value();
      }
    }

    return (int) $quantity;
  }

  return NULL;
}

/**
 * Implements hook_commerce_line_item_summary_link_info_alter().
 */
function nvision_core_commerce_line_item_summary_link_info_alter(&$links) {
  $links['view_cart']['attributes']['class'] = array('btn', 'btn-default');
  $links['checkout']['attributes']['class'] = array('btn', 'btn-success');
}

/**
 * Implements hook_form_alter().
 */
function nvision_core_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'simplenews_block_form') !== FALSE) {
    global $user;
    $tid = $form['#tid'];

    if ($user->uid) {
      if (!simplenews_user_is_subscribed($user->mail, $tid)) {
        $form['mail'] = array(
          '#type'      => 'textfield',
          '#value'     => $user->mail,
          '#title'     => t('E-mail'),
          '#size'      => 20,
          '#maxlength' => 128,
          '#required'  => TRUE,
        );
        $form['action'] = array('#type' => 'value', '#value' => 'subscribe');
        $form['#attributes'] = array('class' => array('simplenews-subscribe'));
      }
    }

    unset($form['mail']['#title']);
    $form['mail']['#attributes']['placeholder'] = t('youremail@example.com');
    $form['submit']['#attributes']['class'] = array('btn', 'btn-success', 'pull-right');
  }
}

/**
 * Implements hook_menu_alter().
 */
function nvision_core_menu_alter(&$items) {
  // Custom callback for Order page.
  $items['user/%user/orders/%commerce_order']['title callback'] = 'nvision_core_commerce_order_ui_order_title';
}

/**
 * Replacement title callback function for Orders.
 *
 * @param $order
 *
 * @return null|string
 */
function nvision_core_commerce_order_ui_order_title($order) {
  return t('Order #@number', array('@number' => $order->order_number));
}

/**
 * Returns social links.
 *
 * @return array
 */
function _nvision_core_social_links() {
  return array(
    'facebook' => 'https://www.facebook.com/NvisionAthletics',
    'twitter' => 'https://twitter.com/officialnvision',
    'instagram' => 'https://www.instagram.com/Nvision.Athletics',
  );
}
